#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;

const int to[8][8] = {{0,-1,-1,1,-1,1,1,2},
					  {0,-1,-1,1,-1,1,1,2},
					  {-1,0,0,1,0,1,1,2},
					  {-1,0,0,1,0,1,1,2},
					  {0,-1,-1,1,-1,1,1,2},
					  {0,-1,-1,1,-1,1,1,2},
					  {-1,0,0,1,0,1,1,2},
					  {-1,0,0,1,0,1,1,2}};
const int mod = 100000007;
int n,k;
int dp[2][8][2003];
int ans[1001][2001];

int main()
{
	// .  . .  . |  . .  . |  . .  . |  . .  . |
	// .. .... ..+. ..+- ..+- ..+. ..+. ..+- ..+-
	// .  . .  . .  . .  . .  . |  . |  . |  . |
	// 0   0    1    2    3    4    5    6    7
	//     +0   X    X    +1   X    +1   +1   +2
	//
	// |  | .  | |  | .  | |  | .  | |  | .  | |
	// +. +... +.+. +.+- +.+- +.+. +.+. +.+- +.+-
	// .  . .  . .  . .  . .  . |  . |  . |  . |
	// 1   0    1    2    3    4    5    6    7
	//     +0   X    X    +1   X    +1   +1   +2
	//
	// .  . .  . |  . .  . |  . .  . |  . .  . |
	// +- +-.. +-+. +-+- +-+- +-+. +-+. +-+- +-+-
	// .  . .  . .  . .  . .  . |  . |  . |  . |
	// 2   0    1    2    3    4    5    6    7
	//     X    +0   +0   +1   +0   +1   +1   +2
	//
	// |  | .  | |  | .  | |  | .  | |  | .  | |
	// +- +-.. +-+. +-+- +-+- +-+. +-+. +-+- +-+-
	// .  . .  . .  . .  . .  . |  . |  . |  . |
	// 3   0    1    2    3    4    5    6    7
	//     X    +0   +0   +1   +0   +1   +1   +2
	//
	// .  . .  . |  . .  . |  . .  . |  . .  . |
	// +. +... +.+. +.+- +.+- +.+. +.+. +.+- +.+-
	// |  | .  | .  | .  | .  | |  | |  | |  | |
	// 4   0    1    2    3    4    5    6    7
	//     +0   X    X    +1   X    +1   +1   +2
	//
	// |  | .  | |  | .  | |  | .  | |  | .  | |
	// +. +... +.+. +.+- +.+- +.+. +.+. +.+- +.+-
	// |  | .  | .  | .  | .  | |  | |  | |  | |
	// 5   0    1    2    3    4    5    6    7
	//     +0   X    X    +1   X    +1   +1   +2
	//
	// .  . .  . |  . .  . |  . .  . |  . .  . |
	// +- +-.. +-+. +-+- +-+- +-+. +-+. +-+- +-+-
	// |  | .  | .  | .  | .  | |  | |  | |  | |
	// 6   0    1    2    3    4    5    6    7
	//     X    +0   +0   +1   +0   +1   +1   +2
	//
	// |  | .  | |  | .  | |  | .  | |  | .  | |
	// +- +-.. +-+. +-+- +-+- +-+. +-+. +-+- +-+-
	// |  | .  | .  | .  | .  | |  | |  | |  | |
	// 7   0    1    2    3    4    5    6    7
	//     X    +0   +0   +1   +0   +1   +1   +2

	bool flag = 0;
	dp[flag][5][1] = dp[flag][7][2] = 1;
	for (int i = 1;i <= 1000;i++,flag = !flag)
	{
		for (int j = 0;j < 8;j++)
			for (int k = 1;k <= i*2;k++)
				ans[i][k] = (ans[i][k]+dp[flag][j][k])%mod;
		memset(dp[!flag],0,sizeof(dp[!flag]));
		for (int j = 0;j < 8;j++)
			for (int k = 1;k <= i*2;k++)
				if (dp[flag][j][k] != 0)
					for (int q = 0;q < 8;q++)
						if (to[j][q] != -1)
							dp[!flag][q][k+to[j][q]] = (dp[!flag][q][k+to[j][q]]+dp[flag][j][k])%mod;
	}
	int totcas;
	scanf("%d",&totcas);
	for (int cas = 1;cas <= totcas;cas++)
	{
		scanf("%d%d",&n,&k);
		printf("%d\n",ans[n][k]);
	}
	return 0;
}
